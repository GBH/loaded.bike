= render "_navigation.html", conn: @conn, tour: @tour, prev_waypoint: @prev_waypoint, next_waypoint: @next_waypoint

.waypoint
  .actions.clearfix
    = published_badge(@waypoint.is_published)
    - link to: current_user_tour_waypoint_path(@conn, :edit, @tour, @waypoint), class: "btn btn-light btn-sm pull-right" do
      %i.fa.fa-pencil
      Edit

  - markers = LoadedBike.Web.WaypointView.waypoints_to_json(@conn, @tour, :private, @waypoint, @prev_waypoint)
  - track   = LoadedBike.Web.WaypointView.to_json(@waypoint.geojson)
  .map#map{data-lat: "#{@waypoint.lat}", data-lng: "#{@waypoint.lng}", data-markers: "#{markers}", data-track: "#{track}"}

  .description.markdown
    = markdown(@waypoint.description)

.heading
  - link to: current_user_tour_waypoint_photo_path(@conn, :new, @tour, @waypoint), class: "btn btn-sm btn-success pull-right" do
    %i.fa.fa-plus
    Add Photo

  %h1 Photos

.photos#photos
  - for photo <- @waypoint.photos do
    .photo{id: "#{LoadedBike.Photo.dom_id(photo)}"}
      .image
        - link to: current_user_tour_waypoint_photo_path(@conn, :edit, @tour, @waypoint, photo), class: "btn btn-light btn-sm" do
          %i.fa.fa-pencil
          Edit

        - url = LoadedBike.Web.PhotoUploader.url({photo.file, %{photo | waypoint: @waypoint}}, :large)
        %img(src: "#{url}")

      .description.markdown
        = markdown(photo.description)

= render "_navigation.html", conn: @conn, tour: @tour, prev_waypoint: @prev_waypoint, next_waypoint: @next_waypoint
