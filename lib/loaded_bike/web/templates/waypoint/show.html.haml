= render "_navigation.html", conn: @conn, tour: @tour, prev_waypoint: @prev_waypoint, next_waypoint: @next_waypoint

.waypoint

  - markers = waypoints_to_json(@conn, @tour, :public, @waypoint, @prev_waypoint)
  - track   = LoadedBike.Web.WaypointView.to_json(@waypoint.geojson)
  .map#map{data-lat: "#{@waypoint.lat}", data-lng: "#{@waypoint.lng}", data-markers: "#{markers}", data-track: "#{track}"}

  .description.markdown
    = markdown(@waypoint.description)

.photos#photos
  - for photo <- @waypoint.photos do
    .photo{id: "#{LoadedBike.Photo.dom_id(photo)}"}
      .image
        - url = LoadedBike.Web.PhotoUploader.url({photo.file, %{photo | waypoint: @waypoint}}, :large)
        %img(src: "#{url}")

      .description
        = markdown(photo.description)

= render "_navigation.html", conn: @conn, tour: @tour, prev_waypoint: @prev_waypoint, next_waypoint: @next_waypoint

= disqus(url: tour_waypoint_url(@conn, :show, @tour.id, @waypoint.id), id: tour_waypoint_path(@conn, :show, @tour.id, @waypoint.id))

= render LoadedBike.Web.SocialView, "share.html", assigns
